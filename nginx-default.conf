https://learn.microsoft.com/en-us/aspnet/core/host-and-deploy/linux-nginx?view=aspnetcore-7.0&tabs=linux-ubuntu

/etc/nginx/sites-available/default

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# When no server matches
#server {
#    listen   80 default_server;
#    # listen [::]:80 default_server deferred;
#    return   444;
#}

upstream locusbase-webapi{
    server 127.0.0.1:5000;
}

upstream locusbase-webapi-ssl{
    server 127.0.0.1:5001;
}

server {
    listen                 4000;
    listen                 159.223.208.93:4000;
    server_name            app.locusbase.no *.app.locusbase.no;

    location / {
        #proxy_pass http://127.0.0.1:5000;
        proxy_pass         http://locusbase-webapi;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen                    4001 ssl http2;
    listen                    [::]:4001 ssl http2;
    server_name            app.locusbase.no *.app.locusbase.no 159.223.208.93;
    ssl_certificate /etc/letsencrypt/live/app.locusbase.no/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.locusbase.no/privkey.pem; # managed by Certbot
    ssl_session_timeout       1d;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-G>
    ssl_session_cache         shared:SSL:10m;
    ssl_session_tickets       off;
    ssl_stapling              off;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #Redirects all traffic
    location / {
        #include cors_support;
        proxy_pass https://locusbase-webapi-ssl;
        #limit_req  zone=one burst=10 nodelay;
    }
}

==================================

/etc/apache2/sites-available/app.locusbase.no.conf


<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/app.locusbase.no
        ServerName app.locusbase.no
        ServerAlias *

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        <Directory "/var/www/app.locusbase.no">
          Options FollowSymLinks
          AllowOverride All
          Order allow,deny
          Allow from all
        </Directory>

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        #RewriteEngine on
        #RewriteCond %{SERVER_NAME} =app.locusbase.no
        #RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
    <VirtualHost *:443>
        ServerName app.locusbase.no
        ServerAlias *
        ServerAdmin support@locusbase.no
        DocumentRoot /var/www/app.locusbase.no

        #SSLEngine On
        #SSLCertificateFile /etc/nginx/certificate/nginx-certificate.crt
        #SSLCertificateKeyFile /etc/nginx/certificate/nginx.key
        #SSLCertificateChainFile [...]/[theotherone].crt
        #SSLCertificateFile /etc/letsencrypt/live/app.locusbase.no/fullchain.pem
        #SSLCertificateKeyFile /etc/letsencrypt/live/app.locusbase.no/privkey.pem
        #Include /etc/letsencrypt/options-ssl-apache.conf
        Include /etc/letsencrypt/options-ssl-apache.conf
        SSLCertificateFile /etc/letsencrypt/live/app.locusbase.no/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/app.locusbase.no/privkey.pem

        ErrorLog ${APACHE_LOG_DIR}/[custom]_error.log
        CustomLog ${APACHE_LOG_DIR}/[custom]_access.log combined

        <Directory "/var/www/app.locusbase.no">
            Options Indexes FollowSymLinks MultiViews
            AllowOverride All
            Order allow,deny
            Allow from all
        </Directory>

        #RewriteEngine on
        #RewriteCond %{SERVER_NAME} =app.locusbase.no
        #RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
    </VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet

==================================

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

server {
    listen 3001;
    server_name app.locusbase.no;

    root /var/www/data;

    autoindex on; # Enable directory listing

    #location / {
    #    try_files $uri $uri/ =404;
    #}

    location /ssl/ {
        #try_files $uri /ssl/default;
        try_files $uri $uri/ =404;
    }

    #location ~ \.(mp3|mp4) {
    #    root /www/media;
    #}
}

server {
	#listen 80 default_server;
	#listen [::]:80 default_server;
        listen 3000;
        listen 159.223.208.93:3000;
    
        server_name            app.locusbase.no *.app.locusbase.no;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/app.locusbase.no;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	##server_name _;

	location / {
            # First attempt to serve request as file, then
	    # as directory, then fall back to displaying a 404.
	    root /var/www/app.locusbase.no;
	    #try_files $uri $uri/ =404;
            try_files $uri /index.html;
	}

        error_log /var/log/nginx/vue-app-error.log;
        access_log /var/log/nginx/vue-app-access.log;

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

upstream locusbase-webapi{
    server 127.0.0.1:5000;
}

upstream locusbase-webapi-ssl{
    server 127.0.0.1:5001;
}

server {
    if ($host = app.locusbase.no) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen                    80;
    listen                    [::]:80;
    server_name               app.locusbase.no *.app.locusbase.no;
    index index.html index.htm index.nginx-debian.html;
    root /var/www/app.locusbase.no;

    location /ssl/ {
        root /var/www/data;
        try_files $uri /ssl/default;
    }

    location /phpmyadmin {
      root /var/www/html;
      index index.php;
      location ~ \.php$ {
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_pass  unix:/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param DOCUMENT_ROOT  $realpath_root;
        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;
      }
    }
    return 301 https://$host$request_uri;
}

server {
    listen                    443 ssl http2;
    listen                    [::]:443 ssl http2;
    server_name               app.locusbase.no *.app.locusbase.no;

    ssl_certificate /etc/letsencrypt/live/app.locusbase.no/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.locusbase.no/privkey.pem; # managed by Certbot
    ssl_session_timeout       1d;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_ciphers               HIGH:!aNULL:!MD5;

    # Add index.php to the list if you are using PHP
    index index.php index.html index.htm index.nginx-debian.html;
    root /var/www/app.locusbase.no;

    #Redirects all traffic
    location / {
      #include cors_support;
      add_header Access-Control-Allow-Origin *;
      try_files $uri $uri/ =404;
    }

    location /phpmyadmin {
      root /var/www/html;
      index index.php;
      location ~ \.php$ {
        try_files $fastcgi_script_name =404;
        include fastcgi_params;
        fastcgi_pass  unix:/run/php/php7.4-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param DOCUMENT_ROOT  $realpath_root;
        fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name; 
      }
    }
}

server {
    listen                 4000;
    server_name            app.locusbase.no *.app.locusbase.no;

    location / {
        #proxy_pass http://127.0.0.1:5000;
        proxy_pass         http://locusbase-webapi;
        #limit_req  zone=one burst=10 nodelay;

        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen                    4001 ssl http2;
    listen                    [::]:4001 ssl http2;
    server_name               app.locusbase.no *.app.locusbase.no;
    ssl_certificate /etc/letsencrypt/live/app.locusbase.no/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.locusbase.no/privkey.pem; # managed by Certbot

    ssl_session_timeout       1d;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA
384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA25
6:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache         shared:SSL:10m;
    ssl_session_tickets       off;
    ssl_stapling              off;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #Redirects all traffic
    location / {
        #include cors_support;

        #proxy_pass http://127.0.0.1:5001;
        proxy_pass https://locusbase-webapi-ssl;
        limit_req  zone=one burst=10 nodelay;
     }
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

==========================

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;
        listen 3000;
        listen 159.223.208.93:3000;
    
        server_name            app.locusbase.no *.app.locusbase.no;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/app.locusbase.no;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	##server_name _;

	location / {
            # First attempt to serve request as file, then
	    # as directory, then fall back to displaying a 404.
	    root /var/www/app.locusbase.no;
	    #try_files $uri $uri/ =404;
            try_files $uri /index.html;
	}

        #location / {
        #    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #    proxy_set_header Host $http_host;
        #    proxy_set_header X-NginX-Proxy true;
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        #    proxy_max_temp_file_size 0;
        #    proxy_pass http://159.223.208.93:80;
        #    proxy_redirect off;
        #    proxy_read_timeout 240s;
        #}

        error_log /var/log/nginx/vue-app-error.log;
        access_log /var/log/nginx/vue-app-access.log;

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name app.locusbase.no *.app.locusbase.no;
#
#       root /var/www/app.locusbase.no;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}

upstream locusbase-webapi{
    server 127.0.0.1:5000;
}

upstream locusbase-webapi-ssl{
    server 127.0.0.1:5001;
}

server {
    listen                    80;
    listen                    [::]:80;
    server_name               app.locusbase.no *.app.locusbase.no;
    return 301 https://$host$request_uri;
}

server {
    listen                    443 ssl http2;
    listen                    [::]:443 ssl http2;
    server_name               app.locusbase.no *.app.locusbase.no;
    ssl_certificate /etc/letsencrypt/live/app.locusbase.no/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.locusbase.no/privkey.pem; # managed by Certbot

    ssl_session_timeout       1d;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_ciphers               HIGH:!aNULL:!MD5;

    root /var/www/app.locusbase.no;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;

    #Redirects all traffic
    location / {
        try_files $uri $uri/ =404;
    }
}

server {
    listen                 4000;
    server_name            app.locusbase.no *.app.locusbase.no;
    location / {
        #proxy_pass http://127.0.0.1:5000;
        proxy_pass         http://locusbase-webapi;
        #limit_req  zone=one burst=10 nodelay;

        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection keep-alive;
        proxy_set_header   Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}

server {
    listen                    4001 ssl http2;
    listen                    [::]:4001 ssl http2;
    server_name               app.locusbase.no *.app.locusbase.no;
    ssl_certificate /etc/letsencrypt/live/app.locusbase.no/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/app.locusbase.no/privkey.pem; # managed by Certbot

    ssl_session_timeout       1d;
    ssl_protocols             TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers               ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA
384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA25
6:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache         shared:SSL:10m;
    ssl_session_tickets       off;
    ssl_stapling              off;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    #Redirects all traffic
    location / {
        #proxy_pass http://127.0.0.1:5001;
        proxy_pass https://locusbase-webapi-ssl;
        limit_req  zone=one burst=10 nodelay;
 
	#add_header Access-Control-Allow-Origin $http_origin;
        #add_header Access-Control-Allow-Origin *;

        #proxy_http_version 1.1;
        #proxy_set_header   Upgrade $http_upgrade;
        #proxy_set_header   Connection keep-alive;
        #proxy_set_header   Host $host;
        #proxy_cache_bypass $http_upgrade;
        #proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_set_header   X-Forwarded-Proto $scheme;
     }

}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
